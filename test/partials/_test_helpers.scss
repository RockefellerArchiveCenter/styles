@import '../../../stylesheets/main.scss';

@include describe('The focus-default mixin') {
  @include it('Sets default focus styles') {
    @include assert {
      @include output {
        @include focus-default();
      }
      @include expect {
        outline: solid 2px $mortar-grey;
        outline-offset: 2px;
      }
    }
  }
}

@include describe('The transition-default mixin') {
  @include it('Sets default transition unless users have set a preference for reduced motion') {
    @include assert {
      @include output {
        @include transition-default();
      }
      @include expect {
        @media screen and (prefers-reduced-motion: no-preference) {
          transition: $transition-default;
        }
      }
    }
  }
}

@include describe('The visually-hidden mixin') {
  @include it('Hides element while making it readable for screen readers') {
    @include assert {
      @include output {
        @include visually-hidden();
      }
      @include expect {
        border: 0;
        clip: rect(0 0 0 0);
        height: 1px;
        margin: -1px;
        overflow: hidden;
        padding: 0;
        position: absolute;
        width: 1px;
      }
    }
  }
}

@include describe('The show-on-focus mixin') {
  @include it('Shows element when it receives user focus') {
    @include assert {
      @include output {
        @include show-on-focus();
      }
      @include expect {
        &:focus {
          clip: auto;
          height: auto;
          overflow: auto;
          position: absolute;
          width: auto;
          z-index: 1000;
        }
      }
    }
  }
}

@include describe('The twelve-column-grid mixin') {
  @include it('Creates a 12-column grid layout') {
    @include assert {
      @include output {
        @include twelve-column-grid();
      }
      @include expect {
        display: grid;
        grid-template-columns: repeat(12, 1fr);
      }
    }
  }
}

@include describe('The input-text mixin') {
  @include it('Sets default input text styles') {
    @include assert {
      @include output {
        @include input-text;
      }
      @include expect {
        color: $night-grey;
        font-family: $sans-serif-stack;
        font-size: 14px;
      }
    }
  }
}

//TODO: Test failing. Debug

// @include describe('The font-face mixin') {
//   @include it('Returns font-face declarations with args for font family, style, weight, name, directory, and filename') {
//     @include assert {
//       @include output {
//         @include font-face(Lato, bold, 700, 'Lato Bold', lato-v23-latin, lato-v23-latin-700);
//       }
//       @include expect {
//         @font-face {
//           font-family: Lato;
//           font-style: bold;
//           font-weight: 700;
//           src:
//             local('Lato Bold'),
//             url('./assets/fonts/lato-v23-latin/lato-v23-latin-700.woff2') format('woff2'),
//             url('./assets/fonts/lato-v23-latin/lato-v23-latin-700.woff') format('woff'),
//             url('./assets/fonts/lato-v23-latin/lato-v23-latin-700.ttf') format('truetype'),
//             url('./assets/fonts/lato-v23-latin/lato-v23-latin-700.svg#Lato') format('svg');
//         }
//       }
//     }
//   }
// }

@include describe('The material-icon mixin') {
  @include it('Sets default material icon styles with args for font-size and line-height') {
    @include assert {
      @include output {
        @include material-icon(24px, normal);
      }
      @include expect {
        direction: ltr;
        display: inline-block;
        font-family: $icons;
        font-feature-settings: 'liga';
        font-size: 24px;
        -webkit-font-smoothing: antialiased;
        font-style: normal;
        font-weight: $font-weight-normal;
        letter-spacing: normal;
        line-height: normal;
        pointer-events: none;
        text-transform: none;
        vertical-align: middle;
        white-space: nowrap;
        word-wrap: normal;
      }
    }
  }
}